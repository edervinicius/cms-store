
generator client {
  provider = "prisma-client-js"
  previewFeatures = ["orderByNulls"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement()) 
  name      String   @unique @db.VarChar(255) 
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt
  ratings   Rating[]

  @@map("user")
} 

model StoreCuisine {
  id        Int      @id @default(autoincrement()) 
  name      String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt
  Stores    Store[]

  @@map("storeCuisine")
} 

model Store {
  id        Int      @id @default(autoincrement()) 
  name      String   @db.VarChar(255)
  address   String  @db.VarChar(255) 
  description   String  @db.VarChar(255) 
  image     String?
  cuisine   StoreCuisine @relation(fields: [cuisineId], references: [id])
  cuisineId Int
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt
  ratings   Rating[]
  products  Product[]

  @@map("store")
} 

model Rating {
  id        Int @id @default(autoincrement())
  comment   String  @db.VarChar(255)
  rating    Float?
  user      User @relation(fields: [userId], references: [id])
  userId    Int
  store     Store @relation(fields: [storeId], references: [id])
  storeId   Int 
  product   Product? @relation(fields: [productId], references: [id])
  productId Int? 
  createdAt DateTime        @default(now()) @db.Timestamp(6)
  updatedAt DateTime        @updatedAt

  @@map("rating")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)  
  description String?
  price       Float?
  image       String?
  store       Store @relation(fields: [storeId], references: [id])
  storeId     Int
  createdAt   DateTime @default(now()) @db.Timestamp(6)
  updatedAt   DateTime @updatedAt
  ratings   Rating[]

  @@map("product")
}